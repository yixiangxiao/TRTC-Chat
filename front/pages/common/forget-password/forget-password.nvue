<template>
	<view>
		<view class="flex align-center justify-center" style="height: 350rpx;">
			<text class="font-lg">忘记密码</text>
		</view>
		
		<view class="px-3">
			<view class="position-relative">
				<input :adjust-position="false" class="bg-light px-2 mb-2 font" :value="form.email" @input="getEmail" @blur="checkEmail" style="height: 100rpx;" type="text" placeholder="请输入邮箱">
				<view v-if="showEmailCheckResult" class="position-absolute" style="bottom: 50rpx;right: 0;">
					<image style="height: 32rpx;width: 32rpx;" :src="emailSrc" mode=""></image>
				</view>
				<view v-if="emailInfo" class="ml-2">
					<text class="font-sm" style="color: red;">{{emailInfo}}</text>
				</view>
			</view>
			
			<view class="position-relative">
				<input :adjust-position="false" :value="form.password" @input="getPassword" @blur="checkPassword" class="bg-light px-2 mb-2 font" style="height: 100rpx;" :type="lookType" placeholder="请输入密码">
				<view  @click="looks" class="position-absolute" style="bottom: 50rpx;right: 0;">
					<image style="height: 32rpx;width: 32rpx;" :src="lookUrl"></image>
				</view>
				<view v-if="passwordInfo" class="ml-2">
					<text class="font-sm" style="color: red;">{{passwordInfo}}</text>
				</view>
			</view>
			
			
			<view class="position-relative">
				<input :adjust-position="false" :value="form.repassword" @input="getRePassword" @blur="checkRePassword" class="bg-light px-2 mb-2 font" style="height: 100rpx;" :type="lookType" placeholder="请确认密码">
				<view @click="looks" class="position-absolute" style="bottom: 50rpx;right: 0;">
					<image style="height: 32rpx;width: 32rpx;" :src="lookUrl"></image>
				</view>
				<view v-if="repasswordInfo" class="ml-2">
					<text class="font-sm" style="color: red;">{{repasswordInfo}}</text>
				</view>
			</view>
			
			<view class="position-relative">
				<input :adjust-position="false" :value="form.yzm" @input="getYzm" @blur="checkYzm" class="bg-light px-2 mb-3 font" style="height: 100rpx;" type="text" placeholder="请输入验证码">
				<!-- 发送验证码 -->
				<view @click="sendEmail" class="position-absolute rounded py-2 flex align-center justify-center" 
				:class="yzmButtonDisabled ? 'bg-light border' :'main-bg-color'" style="width: 200rpx;right: 0;bottom: 40rpx;">
					<text :class="yzmButtonDisabled ? 'text-light-muted' :'text-white'" class="font-sm">{{tip}}</text>
				</view>
				<view v-if="yzmInfo" class="ml-2">
					<text class="font-sm" style="color: red;">{{yzmInfo}}</text>
				</view>
			</view>
			
		</view>
		
		<view class="p-3 flex align-center justify-center">
			<view @click="submit" class="main-bg-color rounded p-3 flex align-center justify-center flex-1" hover-class="main-bg-hover-color">
				<text class="text-white font-md">提交</text>
			</view>
		</view>
		
		<view class="flex align-center justify-center">
			<text class="text-light-muted font p-2" @click="toLogin('')">马上登录</text>
		</view>
	</view>
</template>

<script>
	import {checkEmail, sendMail, forgetPassword} from '@/api/user.js'
	export default {
		data() {
			return {
				yzmButtonDisabled: true, // 发送验证码按钮
				tip: '发送验证码',
				timer: null,
				timeout: 0,
				showEmailCheckResult: false, //显示邮箱校验结果
				emailInfo: '', // 邮箱校验信息
				emailSrc: '', // 邮箱校验图片
				lookUrl: '../../../static/images/user/hide.png', // 密码图片
				lookType: 'password',
				islook: false,
				passwordInfo: '',
				repasswordInfo: '',
				yzmInfo: '',
				form: {
					email: '',
					password: '',
					repassword: '',
					yzm: ''
				},
			}
		},
		beforeDestroy() {
			this.timer = null
			this.timeout = 0
		},
		methods: {
			//密码显示隐藏
			looks() {
				if (this.islook) {
					this.lookType = 'password';
					this.islook = !this.islook;
					this.lookUrl = '../../../static/images/user/hide.png';
				} else {
					this.lookType = 'text';
					this.islook = !this.islook;
					this.lookUrl = '../../../static/images/user/show.png';
				}
			},
			// 获取邮箱
			getEmail(e) {
				if (!e.detail.value) {
					this.showEmailCheckResult = false
					this.emailInfo = ''
				}
				this.form.email = e.detail.value
			},
			// 邮箱是否存在
			checkEmail() {
				if (!this.form.email) {
					this.emailInfo = '邮箱不能为空'
					return 
				}
				// 判断邮箱格式
				const reg = /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
				if (!reg.test(this.form.email)) {
					this.emailInfo = '邮箱格式错误'
					this.showEmailCheckResult = true
					this.emailSrc = '../../../static/images/user/no.png'
					this.yzmButtonDisabled = true
					return
				} else {
					// 邮箱格式通过 并且不在倒计时范围内
					if (this.timeout === 0) {
						this.yzmButtonDisabled = false
					}
				}
				checkEmail({email: this.form.email}).then(res=> {
					// 如果不存在
					if (!res) {
						this.emailInfo = '用户不存在'
						this.showEmailCheckResult = true
						this.emailSrc = '../../../static/images/user/no.png'
						this.yzmButtonDisabled = true
					} else {
						this.emailInfo = ''
						this.showEmailCheckResult = true
						this.emailSrc = '../../../static/images/user/yes.png'
						this.yzmButtonDisabled = false
					}
				})
			},
			// 获取密码
			getPassword(e) {
				if (!e.detail.value) {
					this.passwordInfo = ''
				}
				this.form.password = e.detail.value
			},
			// 校验密码
			checkPassword() {
				if (!this.form.password) {
					this.passwordInfo = '密码不能为空'
					return
				}
				if (this.form.password.length < 6 || this.form.password.length > 20) {
					this.passwordInfo = '密码长度应该在6-20位之间'
				} else {
					this.passwordInfo = ''
				}
			},
			// 获取确认密码
			getRePassword(e) {
				if (!e.detail.value) {
					this.repasswordInfo = ''
				}
				this.form.repassword = e.detail.value
			},
			// 校验两次密码是否一致
			checkRePassword() {
				if (!this.form.repassword) {
					this.repasswordInfo = '确认密码不能为空'
					return 
				}
				if (this.form.repassword !== this.form.password) {
					this.repasswordInfo = '两次输入的密码不一致'
				} else {
					this.repasswordInfo = ''
				}
			},
			// 获取yzm
			getYzm(e) {
				if (!e.detail.value) {
					this.yzmInfo = ''
				}
				this.form.yzm = e.detail.value
			},
			//校验yzm
			checkYzm() {
				if (!this.form.yzm) {
					this.yzmInfo = "验证码不能为空"
					return
				}
				this.yzmInfo = ''
			},
			sendEmail() {
				if (this.yzmButtonDisabled) return
				sendMail({email: this.form.email})
				//设置一个定时，一秒执行一次
				this.timeout = 60
				this.timer= setInterval(() => {
					this.subs();
				}, 1000);
			},
			subs() {
				this.timeout--;
				this.tip = `请${this.timeout}秒后再试`;
				if (this.timeout === 0) {
					clearInterval(this.timer);
					this.tip = `获取验证码`;
					this.yzmButtonDisabled = false; //按键可用
				} else {
					this.yzmButtonDisabled = true; //按键不可用
				}
			},
			// 注册
			submit() {
				this.checkPassword()
				this.checkRePassword()
				this.checkEmail()
				this.checkYzm()
				
				if (!this.emailInfo && !this.passwordInfo && !this.repasswordInfo 
				&& !this.yzmInfo) {
					const params = {
						password: this.form.password,
						repassword: this.form.repassword,
						email: this.form.email,
						yzm: this.form.yzm
					}
					forgetPassword(params).then(res => {
						uni.showToast({
							icon:'none',
							title:'修改密码成功'
						})
						this.toLogin(res.username)
					})
				}
			},
			//去往登录页面
			toLogin(username = '') {
				uni.navigateTo({
					url:'/pages/common/login/login?username=' + username
				})
			},
		}
	}
</script>

<style>

</style>
