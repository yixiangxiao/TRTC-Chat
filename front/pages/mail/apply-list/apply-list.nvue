<template>
	<view style="overflow-y: scroll;background-color: #EDEDED;" :style="'min-height:'+ height + 'px'">
		<!-- 导航栏 -->
		<my-nav-bar title="好友申请列表" is-show-back :is-show-right="false">
		</my-nav-bar>
		
		
		<view ref="box">
			<my-list-item  v-for="(item,index) in applyList" :key="index"
				:title="item.user.nickname || item.user.username"
				:imgUrl="item.user.avatar || '/static/images/userpic.png'" :is-show-right="true"
				:is-show-right-icon="false">
				<view slot="right">
					<my-main-button v-if="item.status === 'pending'" name="同意" @click="handle(item)"></my-main-button>
					<text v-else class="text-muted font-sm">{{ item | formatTitle }}</text>
				</view>
			</my-list-item>
		</view>

		<!-- 上拉加载 -->
		<view class="flex align-center justify-center py-5 bg-light" v-if="showLoadMore">
			<text class="text-muted font">{{loadmore}}</text>
		</view>
	</view>
</template>

<script>
	import MyNavBar from '@/components/my-ui/my-nav-bar.vue';
	import MyListItem from '@/components/my-ui/my-list-item.vue';
	import MyMainButton from '@/components/my-ui/my-main-button.vue';
	import auth from '@/common/mixin/auth.js';
	import { mapState } from 'vuex';
	// #ifdef APP-PLUS-NVUE
	const dom = weex.requireModule('dom')
	// #endif
	export default {
		mixins: [auth],
		components: {
			MyNavBar,
			MyListItem,
			MyMainButton
		},
		data() {
			return {
				page: 1,
				height: 0,
				boxHeight: 0,
				bodyHeight: 0,
				loadmore: "上拉加载更多", // 没有更多了，加载中...
			}
		},
		filters: {
			formatTitle(value) {
				let obj = {
					agree: "已通过",
					refuse: "已拒绝",
					ignore: "已忽略"
				}
				return obj[value.status];
			}
		},
		mounted() {
			dom.getComponentRect(this.$refs.box, (option) => {
			    this.boxHeight = option.size.height;
				let res = uni.getSystemInfoSync()
				this.bodyHeight = res.windowHeight - res.statusBarHeight -uni.upx2px(90)
			});
		},
		computed: {
			...mapState({
				applyList:state=>state.user.apply.list
			}),
			showLoadMore() {
				if (this.bodyHeight < this.boxHeight) {
					return true
				}
				return false
			},
			// applyList() {
			// 	const arr = []
			// 	for (let i = 0; i < 10; i++) {
			// 		arr.push({
			// 			"id": 2,
			// 			"user_id": 3,
			// 			"friend_id": 1,
			// 			"nickname": "xyx123",
			// 			"lookme": 1,
			// 			"lookhim": 1,
			// 			"status": "pending",
			// 			"created_at": "2023-12-15T14:03:24.000Z",
			// 			"updated_at": "2023-12-15T14:03:24.000Z",
			// 			"user": {
			// 				"id": 3,
			// 				"username": "xyx12345",
			// 				"nickname": "",
			// 				"avatar": ""
			// 			}
			// 		})
			// 	}
			// 	return arr
			// }

		},
		onLoad() {
			let res = uni.getSystemInfoSync()
			this.height = res.windowHeight
		},
		onShow() {
			this.page = 1
			this.loadmore = '上拉加载更多'
			this.$store.dispatch('user/getApply', this.page)
		},
		// 监听下拉刷新
		onPullDownRefresh() {
			this.page = 1
			this.loadmore = '上拉加载更多'
			this.$store.dispatch('user/getApply', this.page).then(res => {
				uni.showToast({
					title: '刷新成功',
					icon: 'none'
				});
				uni.stopPullDownRefresh()
			})
		},
		// 监听触底事件
		onReachBottom() {
			// console.log('触底')
			if (this.loadmore !== '上拉加载更多') {
				return;
			}
			this.loadmore = '加载中...'
			this.page = this.page + 1
			this.$store.dispatch('user/getApply', this.page).then(res => {
				// 每页10条，每页满了才有下一页 比如第一页10条，第二页4条 此时第二页没满，表示没有下一页了
				// applyList的长度等于页码*10 当前页满了才需要加载下一页
				this.loadmore = this.applyList.length == this.page * 10 ? '上拉加载更多' : '没有更多了'
			}).catch(err => {
				this.page = this.page - 1
				this.loadmore = '上拉加载更多'
			})
		},
		methods: {
			handle(item) {
				uni.navigateTo({
					url: '../add-friend/add-friend?id=' + item.id,
				});
			}
		}
	}
</script>

<style>

</style>